{"version":3,"sources":["motify.tsx"],"names":["React","forwardRef","useMapAnimateToStyle","Animated","motify","ComponentWithoutAnimation","Component","createAnimatedComponent","withAnimations","Motified","Moti","animate","style","from","transition","delay","state","stylePriority","onDidAnimate","exit","animateInitialState","exitTransition","props","ref","animated"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAoE,OAApE;AAGA,OAAOC,oBAAP,MAAiC,4BAAjC;AACA,OAAOC,QAAP,MAAqB,yBAArB,C,CAEA;;AACA,eAAe,SAASC,MAAT,CAMbC,yBANa,EAMoC;AACjD,QAAMC,SAAS,GAAGH,QAAQ,CAACI,uBAAT,CAChBF,yBADgB,CAAlB;;AAIA,QAAMG,cAAc,GAAG,MACrB;AACA;AACA;AACE,UAAMC,QAAQ,gBAAGR,UAAU,CAOzB,SAASS,IAAT,CACA;AACEC,MAAAA,OADF;AAEEC,MAAAA,KAFF;AAGEC,MAAAA,IAAI,GAAG,KAHT;AAIEC,MAAAA,UAJF;AAKEC,MAAAA,KALF;AAMEC,MAAAA,KANF;AAOEC,MAAAA,aAPF;AAQEC,MAAAA,YARF;AASEC,MAAAA,IATF;AAUEC,MAAAA,mBAVF;AAWEC,MAAAA,cAXF;AAYE,SAAGC;AAZL,KADA,EAeAC,GAfA,EAgBA;AACA,YAAMC,QAAQ,GAAGtB,oBAAoB,CAAC;AACpCS,QAAAA,OADoC;AAEpCE,QAAAA,IAFoC;AAGpCC,QAAAA,UAHoC;AAIpCC,QAAAA,KAJoC;AAKpCC,QAAAA,KALoC;AAMpCC,QAAAA,aANoC;AAOpCC,QAAAA,YAPoC;AAQpCC,QAAAA,IARoC;AASpCE,QAAAA,cAToC;AAUpCD,QAAAA;AAVoC,OAAD,CAArC;AAaA,0BACE,oBAAC,SAAD,eACOE,KADP;AACsB;AACpB,QAAA,KAAK,EAAE,CAACV,KAAD,EAAQY,QAAQ,CAACZ,KAAjB,CAFT;AAGE,QAAA,GAAG,EAAEW,GAHP,CAGmB;;AAHnB,SADF;AAOD,KA5C0B,CAA3B;AA8CA,WAAOd,QAAP;AACD,GAnDH;;AAqDA,SAAOD,cAAP;AACD","sourcesContent":["import React, { forwardRef, ComponentType, FunctionComponent } from 'react'\nimport type { ImageStyle, TextStyle, ViewStyle } from 'react-native'\nimport type { MotiProps } from './types'\nimport useMapAnimateToStyle from './use-map-animate-to-style'\nimport Animated from 'react-native-reanimated'\n\n// https://www.framer.com/blog/posts/magic-motion/\nexport default function motify<\n  Style,\n  Props extends { style?: Style },\n  Ref,\n  ExtraProps,\n  Animate = ViewStyle | ImageStyle | TextStyle\n>(ComponentWithoutAnimation: ComponentType<Props>) {\n  const Component = Animated.createAnimatedComponent(\n    ComponentWithoutAnimation as FunctionComponent<Props>\n  )\n\n  const withAnimations = () =>\n    //  we might use these later\n    // outerProps?: ExtraProps\n    {\n      const Motified = forwardRef<\n        Ref,\n        Props &\n          MotiProps<Animate> &\n          ExtraProps & {\n            children?: React.ReactNode\n          }\n      >(function Moti(\n        {\n          animate,\n          style,\n          from = false as const,\n          transition,\n          delay,\n          state,\n          stylePriority,\n          onDidAnimate,\n          exit,\n          animateInitialState,\n          exitTransition,\n          ...props\n        },\n        ref\n      ) {\n        const animated = useMapAnimateToStyle({\n          animate,\n          from,\n          transition,\n          delay,\n          state,\n          stylePriority,\n          onDidAnimate,\n          exit,\n          exitTransition,\n          animateInitialState,\n        })\n\n        return (\n          <Component\n            {...(props as any)} // TODO\n            style={[style, animated.style]}\n            ref={ref as any} // TODO\n          />\n        )\n      })\n\n      return Motified\n    }\n\n  return withAnimations\n}\n"]}